// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://mit-license.org"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/certificate": {
            "post": {
                "description": "The CSR handler is responsible for processing Certificate Signing Requests (CSRs). It validates incoming CSR data, ensuring compliance with formatting and policy standardsnn are met. Once validated, the handler creates a new digital certificate with the entity's public key and associated identity information. The handler produces and returns a PEM encoded certificate",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "CSR"
                ],
                "summary": "Processes Certificate Signing Requests and returns X.509",
                "responses": {
                    "200": {
                        "description": "Certificate.pem",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Unsuported Media - Must be Multipart Form Data",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p12": {
            "post": {
                "description": "CSRHandler accepts a CSR in a multipart form data request and returns a PEM file or JSON content given HTTP Accept header",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "PKCS-12"
                ],
                "summary": "Handles PKCS #12 request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public": {
            "get": {
                "tags": [
                    "Public Keys"
                ],
                "summary": "Exposes the CAs Public Key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Scorpio PKI Service",
	Description:      "A configurable X509 Certificate Authority management tool implemented in Go.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
